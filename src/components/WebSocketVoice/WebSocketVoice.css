.streaming-voice-interface-container {
  height: 100vh;
  width: 100%;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}

.streaming-voice-interface {
  height: 100vh;
  width: 100%;
  margin: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow: hidden;
  max-height: 100vh;
  min-height: 100%;
}

.streaming-voice-interface {
  width: 100%;
  height: 100vh !important;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Ensure the Card component doesn't take up unnecessary space */
.streaming-voice-interface.card {
  box-shadow: none;
  border: none;
  background: transparent;
  height: 100vh !important;
  min-height: 100% !important;
  width: 100% !important;
  display: flex;
  flex-direction: column;
  position: relative;
  overflow: visible !important;
}

/* Ensure the Card.Body component centers content properly */
.streaming-voice-interface.card .card-body {
  padding: 10px !important;
  padding-top: 80px !important;
  padding-bottom: 80px !important;
  display: flex !important;
  flex-direction: column !important;
  align-items: center !important;
  justify-content: flex-start !important;
  overflow: visible !important;
  width: 100% !important;
}

/* Additional vertical spacing for mobile */
@media (max-width: 768px) {
  .streaming-voice-interface.card .card-body {
    padding-top: 60px !important;
    padding-bottom: 60px !important;
  }
}

/* Style for the keyboard icon at the bottom */
.streaming-voice-interface .top-icon {
  position: fixed;
  bottom: 25px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 100;
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  padding: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.top-icon button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  padding: 0;
  border-radius: 50%;
}

.top-icon button:hover {
  opacity: 0.8;
  transform: scale(1.1);
}

/* Voice controls with high specificity */
.streaming-voice-interface .voice-controls {
  display: flex !important;
  flex-direction: column !important;
  align-items: center !important;
  justify-content: center !important;
  gap: 15px !important;
  padding: 15px !important;
  width: 100% !important;
  height: 150px !important;
  min-height: 150px !important;
  overflow: visible !important;
  flex: 1 !important;
  position: relative !important;
  z-index: 30 !important;
  margin-top: 60px !important;
}

/* Force a perfectly circular button with important rules */
.record-button.btn {
  width: 64px !important;
  height: 64px !important;
  min-width: 64px !important;
  min-height: 64px !important;
  max-width: 64px !important;
  max-height: 64px !important;
  padding: 0 !important;
  border-radius: 50% !important;
  aspect-ratio: 1 !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  background-color: #019ea1 !important;
  border-color: #019ea1 !important;
  border: none !important;
  box-shadow: 0 4px 10px rgba(1, 158, 161, 0.3) !important;
  z-index: 50 !important;
  overflow: hidden !important;
}

.record-button.btn:hover {
  transform: translate(-50%, -50%) scale(1.05) !important;
  background-color: #018b8d !important;
  border-color: #018b8d !important;
  box-shadow: 0 6px 15px rgba(1, 158, 161, 0.4) !important;
}

.record-button.btn:active {
  transform: translate(-50%, -50%) scale(0.98) !important;
  background-color: #0a58ca !important;
  border-color: #0a58ca !important;
}

/* Add styles for the microphone icon inside the button */
.record-button.btn svg {
  width: 32px !important;
  height: 32px !important;
  color: white !important;
}

.recording-controls {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: auto !important;
  min-width: 200px !important;
}

.recording-buttons {
  display: flex;
  gap: 16px;
  width: 100%;
  justify-content: center;
}

/* Send/Cancel buttons - match voice playback button styling */
.streaming-voice-interface .send-button.btn,
.streaming-voice-interface .cancel-button.btn {
  width: 48px !important;
  height: 48px !important;
  min-width: 48px !important;
  min-height: 48px !important;
  padding: 0 !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  border-radius: 9999px !important;
  border: none !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12) !important;
  transition: all 0.2s ease !important;
  position: relative !important;
  overflow: hidden !important;
  margin: 0 !important;
  line-height: 1 !important;
}

/* Send button specific styling */
.streaming-voice-interface .send-button.btn {
  background: #28a745 !important; /* Green background */
  color: white !important;
}

.streaming-voice-interface .send-button.btn:hover {
  transform: translateY(-1px) !important;
  box-shadow: 0 4px 12px rgba(40, 167, 69, 0.2) !important;
  background: #218838 !important;
}

.streaming-voice-interface .send-button.btn:active {
  transform: translateY(1px) !important;
  box-shadow: 0 1px 4px rgba(40, 167, 69, 0.1) !important;
  background: #1e7e34 !important;
}

/* Cancel button specific styling */
.streaming-voice-interface .cancel-button.btn {
  background: #dc3545 !important; /* Red background */
  color: white !important;
}

.streaming-voice-interface .cancel-button.btn:hover {
  transform: translateY(-1px) !important;
  box-shadow: 0 4px 12px rgba(220, 53, 69, 0.2) !important;
  background: #c82333 !important;
}

.streaming-voice-interface .cancel-button.btn:active {
  transform: translateY(1px) !important;
  box-shadow: 0 1px 4px rgba(220, 53, 69, 0.1) !important;
  background: #bd2130 !important;
}

/* Icon styling inside send/cancel buttons */
.streaming-voice-interface .send-button.btn svg,
.streaming-voice-interface .cancel-button.btn svg {
  width: 20px !important;
  height: 20px !important;
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  transition: all 0.2s ease !important;
  opacity: 0.9 !important;
}

.streaming-voice-interface .send-button.btn:hover svg,
.streaming-voice-interface .cancel-button.btn:hover svg {
  opacity: 1 !important;
}

.recording-indicator {
  color: #dc3545;
  display: flex;
  align-items: center;
  gap: 10px;
  width: 100%;
  justify-content: center;
}

.streaming-indicator {
  display: flex;
  align-items: center;
  gap: 10px;
  color: #019ea1;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: auto !important;
  min-width: 150px !important;
  justify-content: center;
}

.pulse {
  display: inline-block;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: #dc3545;
  animation: pulse 1s infinite;
}

/* Reorganize the layout to have controls at the top and fixed scroll areas */
.main-content-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex: 1;
  width: 100%;
  min-height: 60vh; /* Ensure minimum height */
  padding-bottom: 70px;
  position: relative;
  z-index: 10;
}

/* Control areas at the top */
.controls-area {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-top: 20px;
  margin-bottom: 30px;
  padding: 15px;
  position: relative;
  z-index: 20;
  min-height: 200px;
}

/* Increase spacing between controls */
.voice-controls,
.recording-controls,
.playback-controls,
.streaming-indicator,
.disconnected-controls {
  margin: 15px 0;
  min-height: 50px;
  display: flex;
  align-items: center;
}

/* Make autoplay warning more compact */
.autoplay-warning {
  max-width: 400px;
  padding: 10px 15px;
  margin: 15px 0;
  font-size: 1rem;
  word-break: break-word;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Messages display area */
.messages-area {
  display: flex;
  flex-direction: column;
  width: 100%;
  padding: 0 15px;
  margin-top: 30px;
  overflow: hidden;
  position: relative;
}

/* Scrollbar styling for containers */
.transcription-container,
.ai-response-container {
  scrollbar-width: thin;
  scrollbar-color: rgba(0, 0, 0, 0.2) transparent;
}

.transcription-container::-webkit-scrollbar,
.ai-response-container::-webkit-scrollbar {
  width: 6px;
}

.transcription-container::-webkit-scrollbar-track,
.ai-response-container::-webkit-scrollbar-track {
  background: transparent;
}

.transcription-container::-webkit-scrollbar-thumb,
.ai-response-container::-webkit-scrollbar-thumb {
  background-color: rgba(1, 158, 161, 0.2);
  border-radius: 4px;
}

.ai-response-container::-webkit-scrollbar-thumb {
  background-color: rgba(1, 158, 161, 0.2);
}

/* Transcription container styles */
.transcription-container {
  width: 90%;
  max-width: 600px;
  position: relative;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 8px;
  padding: 15px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  z-index: 10;
  max-height: 150px;
  min-height: 60px;
  overflow-y: auto;
  margin-bottom: 20px;
}

.transcription-text {
  font-size: 1.1rem;
  line-height: 1.5;
  color: #333;
  white-space: pre-wrap;
  word-break: break-word;
}

.transcription-text.final {
  font-weight: 500;
  border-left: 4px solid #019ea1;
}

.transcription-empty {
  color: #999;
  font-style: italic;
  font-size: 0.9rem;
}

/* AI Response container styles */
.ai-response-container {
  width: 90%;
  max-width: 600px;
  position: relative;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(240, 249, 255, 0.95);
  border-radius: 8px;
  padding: 15px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);
  z-index: 10;
  max-height: 200px;
  min-height: 80px;
  overflow-y: auto;
  border-left: 4px solid #019ea1;
}

.ai-response-text {
  font-size: 1.1rem;
  line-height: 1.5;
  color: #019ea1;
  white-space: pre-wrap;
  word-break: break-word;
}

.ai-response-empty {
  color: #8eb8ff;
  font-style: italic;
  font-size: 0.9rem;
}

.ai-response-label {
  font-size: 0.9rem;
  margin-bottom: 8px;
  font-weight: 500;
  color: #019ea1;
  display: flex;
  align-items: center;
  gap: 6px;
}

/* Error message styling to minimize space usage */
.error-message {
  width: 100%;
  max-width: 500px;
  margin-bottom: 15px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 1rem;
  padding: 10px 15px;
  border-radius: 4px;
  word-break: break-word;
  max-height: none;
  overflow-y: visible;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.error-message button {
  padding: 0 6px;
  flex-shrink: 0;
  margin-left: 8px;
}

@keyframes pulse {
  0% { opacity: 1; }
  50% { opacity: 0.4; }
  100% { opacity: 1; }
}

@media (max-width: 768px) {
  .streaming-voice-interface {
    margin: 0;
    height: 100vh;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    flex-direction: column;
  }
  
  .streaming-voice-interface.card {
    position: static;
    flex: 1 1 auto;
    box-shadow: none;
    border: none;
    height: 100% !important;
    width: 100% !important;
    display: flex;
    flex-direction: column;
  }
  
  .streaming-voice-interface .card-body {
    padding-top: 60px;
    padding-bottom: 50px;
  }
  
  .voice-controls {
    padding: 10px;
    gap: 10px;
    height: 180px !important;
    min-height: 180px !important;
    width: 100%;
    max-width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    flex: 1;
    position: relative;
  }
  
  .transcription-container,
  .ai-response-container {
    width: 95%;
    padding: 12px;
  }
  
  .controls-area {
    margin-top: 15px;
    min-height: 170px;
  }
  
  .transcription-container {
    max-height: 120px;
    margin-bottom: 15px;
  }
  
  .ai-response-container {
    max-height: 150px;
  }
  
  .transcription-text,
  .ai-response-text {
    font-size: 1rem;
  }
  
  .streaming-voice-interface .top-icon {
    position: fixed;
    bottom: 5px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 1000;
    background-color: white;
    border-radius: 50%;
    padding: 8px;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.3);
  }
  
  .top-icon button {
    width: 45px;
    height: 45px;
  }
  
  .record-button.btn {
    width: 64px !important;
    height: 64px !important;
    min-width: 64px !important;
    min-height: 64px !important;
    max-width: 64px !important;
    max-height: 64px !important;
  }
  
  .record-button.btn svg {
    width: 32px !important;
    height: 32px !important;
  }
  
  .error-message, 
  .autoplay-warning {
    font-size: 1rem;
    padding: 12px 15px;
    margin-bottom: 15px;
    border-radius: 6px;
    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
    width: 100%;
    max-width: 90%;
  }
  
  .error-message button {
    padding: 4px 8px;
    margin-left: 10px;
    font-size: 1rem;
  }
  
  .send-button,
  .cancel-button {
    min-width: 80px;
    padding: 8px 15px;
    font-size: 1rem;
  }
  
  .main-content-container {
    padding-bottom: 90px;
    justify-content: center;
    width: 100%;
  }
  
  .error-container {
    position: absolute;
    top: 20px;
    left: 0;
    right: 0;
    padding: 0 10px;
    max-height: none;
    margin-bottom: 20px;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .streaming-indicator {
    width: auto !important;
    min-width: 150px !important;
  }
  
  .recording-controls {
    width: auto !important;
    min-width: 200px !important;
  }
  
  .playback-controls {
    padding: 12px;
    gap: 10px;
  }
  
  .voice-visualization-container {
    height: 150px;
    margin: 10px auto 20px;
  }
  
  .connection-status {
    top: 45px;
  }
}

/* Fix for Bootstrap Card component */
.card.streaming-voice-interface {
  height: 100vh !important;
  min-height: 100% !important;
  max-height: none !important;
  width: 100% !important;
  overflow: visible !important;
  display: flex;
  flex-direction: column;
  position: relative;
}

/* Ensure the component fits within the tab-content-wrapper */
.tab-content-wrapper .streaming-voice-interface {
  position: relative;
  height: 100% !important;
  max-height: none !important;
  width: 100% !important;
  display: flex;
  flex-direction: column;
}

/* Ensure the component doesn't force the parent to scroll */
.content-area .streaming-voice-interface {
  flex: 1 1 auto;
  height: 100%;
  width: 100% !important;
  position: relative;
}

.play-button {
  margin-top: 8px;
  min-width: 140px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 5px;
}

.playback-controls {
  display: flex;
  gap: 16px;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: auto !important;
  min-width: 100px !important;
  padding: 16px;
  background: transparent;
}

/* Add a container for the main content to ensure vertical centering */
.main-content-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex: 1;
  width: 100%;
  min-height: 60vh; /* Ensure minimum height */
  padding-bottom: 70px;
  position: relative;
}

/* Add specific styles for error messages to ensure they don't push content */
.error-container {
  position: absolute;
  top: 20px;
  left: 0;
  right: 0;
  width: 100%;
  z-index: 50;
  display: flex;
  flex-direction: column;
  align-items: center;
  max-height: none;
  overflow-y: visible;
  padding: 0 15px;
  margin-bottom: 15px;
}

/* Mobile adjustments for error container */
@media (max-width: 768px) {
  .error-container {
    top: 100px; /* Move error container below navbar and connection status */
    z-index: 60; /* Ensure it's above other elements */
  }
  
  /* Add more spacing below error container */
  .error-container + .voice-visualization-container {
    margin-top: 130px !important; /* Increased margin to make room for error messages */
  }
  
  /* When error container is present, adjust visualization margins */
  .streaming-voice-interface .voice-visualization-container {
    transition: margin 0.3s ease !important; /* Smooth transition when error appears/disappears */
  }
}

/* Add margin to voice controls when error container is present */
.error-container + .voice-controls {
  margin-top: 10px;
}

.voice-playback {
  position: relative;
  width: 100%;
}

.voice-playback__controls {
  display: flex;
  gap: 16px;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: auto !important;
  min-width: 100px !important;
  padding: 16px;
  background: transparent;
  z-index: 10;
}

/* Highly specific selector to override any Bootstrap styles */
.streaming-voice-interface .voice-playback__button.btn {
  width: 48px !important;
  height: 48px !important;
  min-width: 48px !important;
  min-height: 48px !important;
  padding: 0 !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  border-radius: 9999px !important;
  border: none !important;
  background: #bfdbef !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12) !important;
  transition: all 0.2s ease !important;
  color: #073c72 !important;
  position: relative !important;
  overflow: hidden !important;
  margin: 0 !important;
  line-height: 1 !important;
}

.streaming-voice-interface .voice-playback__button.btn:hover {
  transform: translateY(-1px) !important;
  box-shadow: 0 4px 12px rgba(25, 118, 210, 0.15) !important;
  background: #BBDEFB !important;
}

.streaming-voice-interface .voice-playback__button.btn:active {
  transform: translateY(1px) !important;
  box-shadow: 0 1px 4px rgba(25, 118, 210, 0.1) !important;
  background: #90CAF9 !important;
}

.streaming-voice-interface .voice-playback__button.btn svg {
  width: 20px !important;
  height: 20px !important;
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  transition: all 0.2s ease !important;
  opacity: 0.9 !important;
}

.streaming-voice-interface .voice-playback__button.btn:hover svg {
  opacity: 1 !important;
}

/* Stop button specific styles */
.streaming-voice-interface .voice-playback__button--stop.btn {
  background: #f6bac3 !important;
  color: #D32F2F !important;
}

.streaming-voice-interface .voice-playback__button--stop.btn:hover {
  background: #f67683 !important;
}

.streaming-voice-interface .voice-playback__button--stop.btn:active {
  background: #EF9A9A !important;
}

/* Connection status indicator with high specificity */
.streaming-voice-interface .connection-status {
  display: flex !important;
  align-items: center !important;
  margin-bottom: 15px !important;
  font-size: 0.85rem !important;
  color: #555 !important;
  position: absolute !important;
  top: 10px !important; /* Increased from 15px to be visible below top navbar */
  left: 0 !important;
  right: 0 !important;
  justify-content: center !important;
  z-index: 10 !important;
  background-color: rgba(255, 255, 255, 0.8) !important; /* Add slight background for better visibility */
  padding: 5px 8px !important;
  border-radius: 20px !important;
  width: auto !important;
  max-width: 90% !important;
  margin: 0 auto !important;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) !important;
}

.status-indicator {
  display: inline-block;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  margin-right: 5px;
}

.status-indicator.connected {
  background-color: #4CAF50;
}

.status-indicator.connecting {
  background-color: #FFC107;
  animation: blink 1s infinite;
}

.status-indicator.disconnected {
  background-color: #F44336;
}

.status-text {
  margin-right: 10px;
}

.network-status {
  margin-left: auto;
  padding: 2px 6px;
  border-radius: 4px;
  font-size: 0.8rem;
}

.network-status.online {
  color: #4CAF50;
}

.network-status.offline {
  color: #F44336;
  font-weight: bold;
}

@keyframes blink {
  0% { opacity: 0.4; }
  50% { opacity: 1; }
  100% { opacity: 0.4; }
}

/* Disconnected controls */
.disconnected-controls {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 12px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: auto !important;
  min-width: 200px !important;
  text-align: center;
}

.disconnected-controls .connection-message {
  color: #dc3545;
  font-weight: 500;
  margin-bottom: 8px;
}

.retry-button {
  font-size: 1em;
  padding: 10px 20px;
  border-radius: 50px;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}

/* Mobile adjustments with higher specificity */
@media (max-width: 768px) {
  .streaming-voice-interface .connection-status {
    top: 60px !important; /* Slightly lower on mobile */
    font-size: 0.8rem !important;
    padding: 4px 8px !important;
  }
  
  .streaming-voice-interface .voice-visualization-container {
    margin: 85px auto 30px !important; /* Adjust margins for mobile */
  }
  
  .streaming-voice-interface .controls-area {
    margin-top: 15px !important;
    min-height: 170px !important;
  }
  
  .streaming-voice-interface .voice-controls {
    padding: 8px !important;
  }
  
  .streaming-voice-interface .voice-playback__controls {
    padding: 12px !important;
    gap: 12px !important;
  }
  
  .streaming-voice-interface .voice-playback__button.btn {
    width: 44px !important;
    height: 44px !important;
    min-width: 44px !important;
    min-height: 44px !important;
  }
  
  .streaming-voice-interface .voice-playback__button.btn svg {
    width: 20px !important;
    height: 20px !important;
  }
  
  .streaming-voice-interface .disconnected-controls {
    min-width: 180px !important;
  }
  
  .streaming-voice-interface .retry-button {
    font-size: 0.9em !important;
    padding: 8px 16px !important;
  }
}

/* Browser compatibility warning */
.browser-warning {
  width: 100%;
  max-width: 500px;
  font-size: 1rem;
  padding: 15px;
  margin-bottom: 15px;
  word-break: break-word;
  max-height: none;
  overflow-y: visible;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  text-align: center;
}

.browser-not-supported {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 12px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: auto !important;
  min-width: 200px !important;
  text-align: center;
}

.fallback-button {
  font-size: 1em;
  padding: 10px 20px;
  border-radius: 50px;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  background-color: #6c757d;
  color: white;
}

.fallback-button:hover {
  background-color: #5a6268;
}

@media (max-width: 768px) {
  .browser-warning {
    font-size: 0.9rem;
    padding: 12px;
  }
  
  .browser-not-supported {
    min-width: 180px !important;
  }
  
  .fallback-button {
    font-size: 0.9em;
    padding: 8px 16px;
  }
}

/* Auto-Send Settings Button */
.auto-send-settings-button {
  display: none; /* Hide the settings button as it will be moved to navbar */
}

/* Create a new class for navbar settings button */
.navbar-settings-button {
  padding: 0 !important;
  background: none !important;
  border: none !important;
  color: #ffffff !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  position: relative !important;
  width: 40px !important;
  height: 40px !important;
}

.navbar-settings-button svg {
  font-size: 1.25rem !important;
}

/* Add styles for settings panel to display properly when opened from navbar */
.mobile-top-bar .auto-send-settings-panel {
  position: fixed !important;
  top: 60px !important; /* Position below navbar */
  right: 5px !important;
  z-index: 2000 !important; /* Higher z-index to appear above other elements */
}

/* Mobile adjustments */
@media (max-width: 768px) {
  .streaming-voice-interface .connection-status {
    top: 60px !important; /* Slightly lower on mobile */
    font-size: 0.8rem !important;
    padding: 4px 8px !important;
  }

  .streaming-voice-interface .voice-visualization-container {
    margin: 85px auto 30px !important; /* Adjust margins for mobile */
  }
  
  /* Make the voice controls fit better on mobile */
  .streaming-voice-interface .voice-controls {
    padding: 8px !important;
  }
  
  /* Update settings panel position for mobile */
  .mobile-top-bar .auto-send-settings-panel {
    width: 270px !important;
    top: 58px !important;
  }
}

/* Auto-Send Indicator in connection status */
.auto-send-indicator {
  color: #019ea1;
  margin-left: 12px;
  font-size: 0.8rem;
  display: flex;
  align-items: center;
}

.send-delay-indicator {
  margin-left: 12px;
  font-size: 0.8rem;
  color: #019ea1;
  display: flex;
  align-items: center;
}

.indicator-dot {
  width: 6px;
  height: 6px;
  background-color: #019ea1;
  border-radius: 50%;
  margin-right: 5px;
  display: inline-block;
}

.delay-dot {
  background-color: #019ea1;
}

/* Auto-Send Settings Panel */
.auto-send-settings-panel {
  position: absolute;
  top: 50px;
  right: 15px;
  background-color: #fff;
  border-radius: 8px;
  padding: 15px;
  box-shadow: 0 2px 15px rgba(0, 0, 0, 0.15);
  z-index: 100;
  width: 280px;
  max-width: 95vw;
}

.settings-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 15px;
  border-bottom: 1px solid #eee;
  padding-bottom: 10px;
}

.settings-divider {
  margin: 15px 0;
  opacity: 0.15;
}

.settings-header h5 {
  margin: 0;
  font-size: 1rem;
  font-weight: 500;
}

.close-button {
  padding: 0;
  color: #6c757d;
  border: none;
}

.close-button:hover {
  color: #343a40;
}

/* Style for the range labels */
.range-label {
  color: #6c757d;
  font-size: 0.75rem;
}

/* Sending state styles */
.streaming-voice-interface .send-button.btn:disabled {
  background-color: #28a745 !important;
  opacity: 0.8;
  position: relative;
  overflow: hidden;
}

.streaming-voice-interface .send-button.btn:disabled::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  animation: sending-animation 1.5s infinite;
}

@keyframes sending-animation {
  0% {
    left: -100%;
  }
  50% {
    left: 100%;
  }
  100% {
    left: 100%;
  }
}

/* Form styles for better appearance */
.form-check-input:checked {
  background-color: #019ea1;
  border-color: #019ea1;
}

.fw-medium {
  font-weight: 500;
}

/* Style for the range slider */
.form-range {
  width: 100%;
  height: 2rem;
  padding: 0;
  background-color: transparent;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.form-range:focus {
  outline: none;
}

.form-range::-webkit-slider-thumb {
  width: 20px;
  height: 20px;
  margin-top: -8px;
  background-color: #019ea1;
  border: 0;
  border-radius: 50%;
  -webkit-appearance: none;
  appearance: none;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out;
}

.form-range::-webkit-slider-thumb:hover {
  background-color: #0a58ca;
}

.form-range::-webkit-slider-runnable-track {
  width: 100%;
  height: 4px;
  color: transparent;
  cursor: pointer;
  background-color: #dee2e6;
  border-color: transparent;
  border-radius: 2px;
}

.form-range::-moz-range-thumb {
  width: 20px;
  height: 20px;
  background-color: #019ea1;
  border: 0;
  border-radius: 50%;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out;
}

.form-range::-moz-range-thumb:hover {
  background-color: #0a58ca;
}

.form-range::-moz-range-track {
  width: 100%;
  height: 4px;
  color: transparent;
  cursor: pointer;
  background-color: #dee2e6;
  border-color: transparent;
  border-radius: 2px;
}

.form-range:disabled::-webkit-slider-thumb {
  background-color: #adb5bd;
}

.form-range:disabled::-moz-range-thumb {
  background-color: #adb5bd;
}

/* Mobile styles for settings panel */
@media (max-width: 768px) {
  .auto-send-settings-button {
    top: 10px;
    right: 10px;
  }
  
  .auto-send-settings-button button {
    font-size: 0.7rem;
    padding: 3px 6px;
    width: 28px;
    height: 28px;
  }
  
  .setting-indicator {
    width: 6px;
    height: 6px;
  }
  
  .auto-send-settings-panel {
    top: 45px;
    right: 10px;
    padding: 12px;
    width: 250px;
  }
  
  .settings-header {
    margin-bottom: 12px;
    padding-bottom: 8px;
  }
  
  .settings-header h5 {
    font-size: 0.9rem;
  }
  
  .form-label {
    font-size: 0.85rem;
  }
  
  .form-text {
    font-size: 0.75rem;
  }
  
  .form-check-label {
    font-size: 0.85rem;
  }
  
  .auto-send-indicator,
  .send-delay-indicator {
    font-size: 0.7rem;
    margin-left: 8px;
  }
  
  .indicator-dot {
    width: 5px;
    height: 5px;
    margin-right: 3px;
  }
  
  .range-label {
    font-size: 0.7rem;
  }
  
  .settings-divider {
    margin: 12px 0;
  }
}

/* Fix small overlap with connection status when settings panel is open */
.auto-send-settings-panel + .connection-status {
  margin-top: 40px;
}

/* Add styles for the current transcription */
.transcription-text .current {
  color: #019ea1;
  font-style: italic;
}

.transcription-text .final {
  color: #000;
  font-weight: 500;
}

/* Ensure the transcription container has enough space */
.transcription-container {
  min-height: 100px;
  max-height: 150px;
  overflow-y: auto;
  margin-bottom: 15px;
  padding: 10px;
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  background-color: #f9f9f9;
}

.transcription-text {
  font-size: 1rem;
  line-height: 1.5;
}

/* Voice Visualization Styles with high specificity */
.streaming-voice-interface .voice-visualization-container {
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
  width: 300px !important; /* Fixed width to maintain aspect ratio */
  height: 300px !important; /* Fixed height to ensure perfect circle */
  max-width: 400px !important;
  aspect-ratio: 1 / 1 !important; /* Force 1:1 aspect ratio */
  margin: 90px auto 20px !important; /* Reduced bottom margin */
  position: relative !important;
  overflow: hidden !important;
  border-radius: 50% !important; /* Make container perfectly circular */
  background-color: transparent !important;
  box-shadow: none !important;
  box-sizing: border-box !important;
  z-index: 5 !important;
  animation: pulse-idle 2s infinite !important;
}

/* Canvas element that holds the visualization */
.streaming-voice-interface .voice-visualization {
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  width: 100% !important;
  height: 100% !important;
  display: block !important;
  box-sizing: border-box !important;
}

/* Fallback for browsers that don't support aspect-ratio */
@supports not (aspect-ratio: 1 / 1) {
  .streaming-voice-interface .voice-visualization-container {
    height: 0 !important;
    padding-bottom: 100% !important; /* Creates a square */
  }
}

/* Media query adjustments for mobile */
@media (max-width: 768px) {
  .streaming-voice-interface .voice-visualization-container {
    width: 250px !important; /* Fixed width for mobile */
    height: 250px !important; /* Fixed height for mobile */
    margin: 90px auto 10px !important; /* Reduced bottom margin on mobile */
  }
  
  /* Reduce the controls-area top margin to bring it closer to visualization */
  .streaming-voice-interface .controls-area {
    margin-top: 0 !important; /* Remove top margin on controls area */
    min-height: 150px !important; /* Reduce min-height on mobile */
  }
  
  /* Only apply additional margin when there's an error */
  .error-container + .voice-visualization-container {
    margin-top: 120px !important; /* Slightly reduced from 130px */
  }
}

/* Update the small screen breakpoint as well */
@media (max-width: 576px) {
  .streaming-voice-interface .voice-visualization-container {
    width: 220px !important; /* Even smaller on very small screens */
    height: 220px !important; /* Maintain aspect ratio */
    margin: 90px auto 10px !important;
  }
  
  /* Make the controls area even smaller on very small screens */
  .streaming-voice-interface .controls-area {
    min-height: 120px !important;
  }
}

/* Add animation for recording state with high specificity */
@keyframes pulse-recording {
  0% {
    box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(220, 53, 69, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(220, 53, 69, 0);
  }
}

@keyframes pulse-playing {
  0% {
    box-shadow: 0 0 0 0 rgba(0, 123, 255, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(0, 123, 255, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(0, 123, 255, 0);
  }
}

.streaming-voice-interface .voice-visualization-container.recording {
  animation: pulse-recording 1.5s infinite !important;
}

.streaming-voice-interface .voice-visualization-container.playing {
  animation: pulse-playing 1.5s infinite !important;
}

/* Style for visualization toggle buttons with high specificity */
.streaming-voice-interface .viz-toggle-btn.btn {
  flex: 1 !important;
  min-width: 70px !important;
  border-radius: 20px !important;
  font-size: 0.85rem !important;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) !important;
  transition: all 0.2s ease !important;
}

.streaming-voice-interface .viz-toggle-btn.btn:hover {
  transform: translateY(-2px) !important;
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.15) !important;
}

/* Control areas with high specificity */
.streaming-voice-interface .controls-area {
  width: 100% !important;
  display: flex !important;
  flex-direction: column !important;
  align-items: center !important;
  justify-content: center !important;
  margin-top: 20px !important;
  margin-bottom: 30px !important;
  padding: 15px !important;
  position: relative !important;
  z-index: 20 !important;
  min-height: 200px !important;
}

/* Add specific styles for settings panel when opened from mobile navbar */
.mobile-top-bar ~ .auto-send-settings-panel {
  position: fixed !important;
  top: 56px !important; /* Position just below navbar */
  right: 10px !important;
  z-index: 2000 !important; /* Higher z-index than most elements */
  width: 280px !important;
  max-width: 90% !important;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2) !important;
}

/* Update button styles for vizualization toggle buttons */
.viz-toggle-btn.btn-primary {
  background-color: #019ea1 !important;
  border-color: #019ea1 !important;
}

.viz-toggle-btn.btn-outline-primary {
  color: #019ea1 !important;
  border-color: #019ea1 !important;
}

.viz-toggle-btn.btn-outline-primary:hover {
  background-color: rgba(1, 158, 161, 0.1) !important;
}

/* Add a light background to the connection indicator for better legibility */
.connection-status {
  background-color: rgba(255, 255, 255, 0.85) !important;
  padding: 5px 10px !important;
  border-radius: 20px !important;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) !important;
}

/* Add animation for idle (not recording/playing) state */
@keyframes pulse-idle {
  0% {
    box-shadow: 0 0 0 0 rgba(1, 158, 161, 0.3);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(1, 158, 161, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(1, 158, 161, 0);
  }
}

/* Apply the pulse animation to the container by default */
.streaming-voice-interface .voice-visualization-container {
  animation: pulse-idle 2s infinite !important;
}

/* Override with recording animation when recording */
.streaming-voice-interface .voice-visualization-container.recording {
  animation: pulse-recording 1.5s infinite !important;
}

/* Override with playing animation when playing */
.streaming-voice-interface .voice-visualization-container.playing {
  animation: pulse-playing 1.5s infinite !important;
} 